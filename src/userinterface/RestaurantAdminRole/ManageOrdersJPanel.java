/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.EcoSystem;
import Model.Menu;
import Model.Order;
import Model.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Model.DeliveryMan;
import java.awt.CardLayout;

/**
 *
 * @author chen.wei
 */
public class ManageOrdersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageOrders
     */
    JPanel userProcessContainer;
    UserAccount userAccount;
    EcoSystem system;
    public ManageOrdersJPanel(JPanel userProcessContainer,UserAccount userAccount,EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.system = system;
        populateTable();
        populateCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        lbTitle = new javax.swing.JLabel();
        btnAccept = new javax.swing.JButton();
        lbChoose = new javax.swing.JLabel();
        comDelivery = new javax.swing.JComboBox<>();
        btnSure = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Customer", "Restaurant", "Order", "DeliveryMan", "Status"
            }
        ));
        jScrollPane1.setViewportView(table1);

        lbTitle.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lbTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitle.setText("Order");

        btnAccept.setText("Accept Order");
        btnAccept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptActionPerformed(evt);
            }
        });

        lbChoose.setText("Choose DeliveryMan:");

        comDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comDeliveryActionPerformed(evt);
            }
        });

        btnSure.setText("Comfirm");
        btnSure.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSureActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnAccept)
                                        .addGap(18, 18, 18)
                                        .addComponent(lbChoose)
                                        .addGap(18, 18, 18)
                                        .addComponent(comDelivery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSure))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnBack)))
                        .addGap(0, 25, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAccept)
                    .addComponent(lbChoose)
                    .addComponent(comDelivery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSure))
                .addContainerGap(66, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAcceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model1 = (DefaultTableModel)table1.getModel();
        int row = table1.getSelectedRow();
        // System.out.println(row);
        if(row < 0) {
            JOptionPane.showMessageDialog(this, "please select the row to accept");
            return;
        }else{
           Order order = (Order) model1.getValueAt(row, 0);
           order.setStatus("Order Accepted");
        }
        populateTable();
        
        
    }//GEN-LAST:event_btnAcceptActionPerformed

    private void comDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comDeliveryActionPerformed
        // TODO add your handling code here:
        
         
    }//GEN-LAST:event_comDeliveryActionPerformed

    private void btnSureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSureActionPerformed
        // TODO add your handling code here:
         String selectedCombo = String.valueOf(comDelivery.getSelectedItem());
         for(DeliveryMan d : system.getDeliveryManDirectory().getDeliveryManAccountList()) {
             if(d.getName().equals(selectedCombo)){
                 DefaultTableModel model1 = (DefaultTableModel)table1.getModel();
                 int row = table1.getSelectedRow();
        
                    if(row < 0) {
                        JOptionPane.showMessageDialog(this, "please select the row to accept");
                        return;
                    }else{
                       Order order = (Order) model1.getValueAt(row, 0);
                       order.setStatus("Order Deliverying");
                       order.setDeliveryman(selectedCombo);
                        d.getOrders().add(order);
                    }
        
                   
             }
         }
         //JOptionPane.showMessageDialog(this, "succeed");
         btnSure.setEnabled(false);
         populateTable();
    }//GEN-LAST:event_btnSureActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        AdminWorkAreaJPanel ma = new AdminWorkAreaJPanel(userProcessContainer,userAccount,system );
        userProcessContainer.add("AdminWorkAreaJPanel", ma);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed
    public void populateTable(){
        DefaultTableModel model1 = (DefaultTableModel)table1.getModel();
        model1.setRowCount(0);
        //System.out.println(ecosystem.getOrganizationDirectory().getOrganizationList().get(3).getUserAccountDirectory().getUserAccountList());
         for(Order order : system.getRestaurantDirectory().getRestaurantAccountList().get(0).getOrders() ){
             if(!order.getStatus().equals("Completed")) {
             
             
                  Object[] row = new Object[5];
                 row[0] = order;
                 row[1] = order.getRestaurant();
                 row[2] = order.getMenu();
                 row[3] = order.getDeliveryman();
                 row[4] = order.getStatus();
            
                model1.addRow(row);   
             }
               
                 
         }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAccept;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSure;
    private javax.swing.JComboBox<String> comDelivery;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbChoose;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JTable table1;
    // End of variables declaration//GEN-END:variables

    private void populateCombo() {
      comDelivery.removeAllItems();
      for(DeliveryMan d : system.getDeliveryManDirectory().getDeliveryManAccountList()){
          comDelivery.addItem(d.getName());
          
      }
      
    }
}
